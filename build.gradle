buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'signing'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
}

archivesBaseName = "telegram-bot-api"
group 'io.github.oleksivio'
version '0.9.0'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

if (isReleaseVersion) {
    ext.sonatypeRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
} else {
    ext.sonatypeRepo = "https://oss.sonatype.org/content/repositories/snapshots/"
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}
test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}



task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}
signing {
    required { isReleaseVersion }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name = 'Telegram Bot API'
                packaging 'jar'
                description = 'Spring telegram bot api library'
                url = 'https://github.com/oleksivio/telegram-bot-api'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'oleksivio'
                        name = 'Ilia Oleksiv'
                        email = 'oleksivio@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/oleksivio/telegram-bot-api.git'
                    developerConnection = 'scm:git:ssh://github.com/oleksivio/telegram-bot-api.git'
                    url = 'http://github.com/oleksivio/telegram-bot-api/'
                }
            }
        }
    }
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:1.1.1.RELEASE'
    }
    dependencies {
        dependencySet(group: 'org.springframework', version: '5.0.6.RELEASE') {}
    }
}


dependencies {
    // Spring dependencies

    compile 'org.springframework:spring-core'
    compile 'org.springframework:spring-context'
    compile 'org.springframework:spring-beans'
    compile 'org.springframework:spring-web'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.5'

    compile 'org.slf4j:jcl-over-slf4j:1.7.12'

    compile 'ch.qos.logback:logback-classic:1.2.3'
}
